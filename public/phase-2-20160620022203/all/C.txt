// Name : 4th Dimension Aliens
#include <stdio.h>
int main() {
	// input:
	// latin_characters : 
	char latin_characters[105], latin_consonant_characters[105]="l ёl hёö ёö dr ööё ln ös! wё r öё sёö lö gd tёö!";
	scanf("%s", &latin_characters);


	// write your code here
	// store your results in `latin_consonant_characters`

	// output
	printf("%s", latin_consonant_characters);
	return 0;
}




// Name : A and B and Compilation Errors
#include <stdio.h>
int main() {
	// input:
	// n :  the initial number of compilation errors
	// a : 
	// b : 
	// c : 
	int n, a[10000], b[10000], c[10000], errors_disappeared_after_first_correction=8, errors_disappeared_after_second_correction=123, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}
	for(index = 0; index< (n-1); index++) {
		scanf("%d", &b[index]);
	}
	for(index = 0; index< (n-2); index++) {
		scanf("%d", &c[index]);
	}


	// write your code here
	// store your results in `errors_disappeared_after_first_correction`,`errors_disappeared_after_second_correction`

	// output
	printf("%d", errors_disappeared_after_first_correction);
	printf("%d", errors_disappeared_after_second_correction);
	return 0;
}




// Name : A and B
#include <stdio.h>
int main() {
	// input:
	// n : length of the string
	// given_string : given string
	int n, result=0;
	char given_string[105];
	scanf("%d", &n);
	scanf("%s", &given_string);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : A Bag
#include <stdio.h>
int main() {
	// input:
	// n : number of toolkits
	// volume_of_each_toolkit : volume of each toolkit
	int n, volume_of_each_toolkit[10000], minimum_number_of_bags=4, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &volume_of_each_toolkit[index]);
	}


	// write your code here
	// store your results in `minimum_number_of_bags`

	// output
	printf("%d", minimum_number_of_bags);
	return 0;
}




// Name : Add and Remove
#include <stdio.h>
int main() {
	// input:
	// n : size of array
	// a : source array
	int n, a[10000], maximum_number_of_equal_elements=1, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `maximum_number_of_equal_elements`

	// output
	printf("%d", maximum_number_of_equal_elements);
	return 0;
}




// Name : Adventure Breakfast
#include <stdio.h>
int main() {
	// input:
	// n : size of bread cm
	// m : size of bread cm
	// c : size of slice cxc cms
	int n, m, c, result=4;
	scanf("%d %d %d", &n, &m, &c);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Adventure Time
#include <stdio.h>
int main() {
	// input:
	// n : the distance to Jake's lake house
	int n, minimum_number_of_hours=1;
	scanf("%d", &n);


	// write your code here
	// store your results in `minimum_number_of_hours`

	// output
	printf("%d", minimum_number_of_hours);
	return 0;
}




// Name : Alcohol Calculator
#include <stdio.h>
int main() {
	// input:
	// n1 : alcohol percentage
	// m1 : volume in ml
	// n2 : alcohol percentage
	// m2 : volume in ml
	int n1, n2;
	float m1, m2;
	char v[105]="30%";
	scanf("%d %f", &n1, &m1);
	scanf("%d %f", &n2, &m2);


	// write your code here
	// store your results in `v`

	// output
	printf("%s", v);
	return 0;
}




// Name : All as One
#include <stdio.h>
int main() {
	// input:
	// n : size of array
	// a : array of integers
	int n, a[100000], min_amt_of_changes=5, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `min_amt_of_changes`

	// output
	printf("%d", min_amt_of_changes);
	return 0;
}




// Name : Anniversary
#include <stdio.h>
int main() {
	// input:
	// k :  customer received a free bottle of milk
	// l :  a kilogram of bacon
	// m :  one 10 dollar coupon
	// n : 99 percent discount for everything they bought
	// d :  number of customers that day
	int k, l, m, n, d, result=12;
	scanf("%d", &k);
	scanf("%d", &l);
	scanf("%d", &m);
	scanf("%d", &n);
	scanf("%d", &d);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Another Game of Life
#include <stdio.h>
int main() {
	// input:
	// n :  the size of the map
	// m :  the number of populations that want to
	int n, m, idx, jdx;
	char exists[105]="NO";
	char territory[100][100]={{''}}, territory_tmp[100];
	scanf("%d %d", &n, &m);


	// write your code here
	// store your results in `exists`,`territory`

	// output
	printf("%s", exists);
	if(exists=="YES"){
		for(idx = 0; idx< n; idx++) {
			for(jdx = 0;jdx<n;jdx++) {
				printf("%c ",territory[idx][jdx]);
			}
			printf("\n");
		}
	}
	return 0;
}




// Name : Apartment
#include <stdio.h>
int main() {
	// input:
	// n :  the size of Shalkan’s apartment plan
	// m : the size of Shalkan’s apartment plan
	// nm :  the description of the apartment plan
	int n, m, idx, jdx;
	char nm[2000][2000], new_plan[2000][2000]={{'.','*','.','*','.'},{'*','*','*','*','*'},{'.','*','.','*','.'},{'*','*','*','*','*'},{'.','*','.','*','.'}}, nm_tmp[2000], new_plan_tmp[2000];
	scanf("%d %d", &n, &m);
	for(idx = 0; idx< n; idx++) {
		scanf("%s", &nm_tmp[0]);
		for(jdx = 0;jdx<m;jdx++) {
			nm[idx][jdx] = nm_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `new_plan`

	// output
	for(idx = 0; idx< n; idx++) {
		for(jdx = 0;jdx<m;jdx++) {
			printf("%c ",new_plan[idx][jdx]);
		}
		printf("\n");
	}
	return 0;
}




// Name : Apples
#include <stdio.h>
int main() {
	// input:
	// n :  the amount of apples
	// w :  the weight of each apple
	int n, w[100], index;
	char possibility[105]="YES";
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &w[index]);
	}


	// write your code here
	// store your results in `possibility`

	// output
	printf("%s", possibility);
	return 0;
}




// Name : Arny’s Workout
#include <stdio.h>
int main() {
	// input:
	// n :  the number of exercises
	// a :  the number of repeats for the exercises
	int n, a[20], index;
	char result[105]="chest";
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%s", result);
	return 0;
}




// Name : Arrays Minmax
#include <stdio.h>
int main() {
	// input:
	// n : size of a
	// m : size of b
	// a : array A
	// b : array B
	int n, m, a[10000], b[10000], minimum_num_of_operations=3, index, index;
	scanf("%d %d", &n, &m);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}
	for(index = 0; index< m; index++) {
		scanf("%d", &b[index]);
	}


	// write your code here
	// store your results in `minimum_num_of_operations`

	// output
	printf("%d", minimum_num_of_operations);
	return 0;
}




// Name : Artbook
#include <stdio.h>
int main() {
	// input:
	// s : string of English characters
	char s[105];
	int result=51;
	scanf("%s", &s);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Bacteria
#include <stdio.h>
int main() {
	// input:
	// x : number of bacteria in the box
	int x, answer=2;
	scanf("%d", &x);


	// write your code here
	// store your results in `answer`

	// output
	printf("%d", answer);
	return 0;
}




// Name : Bags with Apples
#include <stdio.h>
int main() {
	// input:
	// y : second bag with y number of apples
	// k : divisible by k
	// n : no more than n
	int y, k, n, x=-1;
	scanf("%d %d %d", &y, &k, &n);


	// write your code here
	// store your results in `x`

	// output
	printf("%d", x);
	return 0;
}




// Name : Beautiful Photo
#include <stdio.h>
int main() {
	// input:
	// photo : girls and boys
	char photo[105], result[105]="YES";
	scanf("%s", &photo);


	// write your code here
	// store your results in `result`

	// output
	printf("%s", result);
	return 0;
}




// Name : Bernie and Formula 1
#include <stdio.h>
int main() {
	// input:
	// n : 
	// m : 
	// k : 
	int n, m, k;
	float probability=0.857143;
	scanf("%d %d %d", &n, &m, &k);


	// write your code here
	// store your results in `probability`

	// output
	printf("%f", probability);
	return 0;
}




// Name : Best Friends
#include <stdio.h>
int main() {
	// input:
	// n : the number of Dima's friends
	// fingers :  the number of fingers Dima's friends will show during the counting game
	int n, fingers[100], answer=3, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &fingers[index]);
	}


	// write your code here
	// store your results in `answer`

	// output
	printf("%d", answer);
	return 0;
}




// Name : Big Bang Pepsi
#include <stdio.h>
int main() {
	// input:
	// n : nth Pepsi
	int n;
	char name[105]="Sheldon";
	scanf("%d", &n);


	// write your code here
	// store your results in `name`

	// output
	printf("%s", name);
	return 0;
}




// Name : Big Chessboard
#include <stdio.h>
int main() {
	// input:
	// x0 : start point
	// y0 : start point
	// x1 : destination point
	// y1 : destination point
	// n : number of segments of the permitted cells
	// rab : each row of rab corresponds to ri ai bi
	int x0, y0, x1, y1, n, rab[100000][3], minimum_moves=4, idx, jdx;
	char rab_tmp[3];
	scanf("%d %d %d %d", &x0, &y0, &x1, &y1);
	scanf("%d", &n);
	for(idx = 0; idx< n; idx++) {
		scanf("%s", &rab_tmp[0]);
		for(jdx = 0;jdx<3;jdx++) {
			rab[idx][jdx] = rab_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `minimum_moves`

	// output
	printf("%d", minimum_moves);
	return 0;
}




// Name : BinSequence
#include <stdio.h>
int main() {
	// input:
	// n : length
	int n, sequence[100]={0,1}, index;
	scanf("%d", &n);


	// write your code here
	// store your results in `sequence`

	// output
	for(index = 0; index< n; index++) {
		printf("%d ",sequence[index]);
	}
	return 0;
}




// Name : Bookshelf
#include <stdio.h>
int main() {
	// input:
	// n : number of books
	// m : number of books remaining in the first shelf
	int n, m, number_of_methods=4;
	scanf("%d %d", &n, &m);


	// write your code here
	// store your results in `number_of_methods`

	// output
	printf("%d", number_of_methods);
	return 0;
}




// Name : Bookworm
#include <stdio.h>
int main() {
	// input:
	// n :  the number of books in the class bookshelf
	int n, digits_needed=4;
	scanf("%d", &n);


	// write your code here
	// store your results in `digits_needed`

	// output
	printf("%d", digits_needed);
	return 0;
}




// Name : Box of Candies
#include <stdio.h>
int main() {
	// input:
	// n :  the number of boxes with candies James and Jessica have
	// a :  the number of candies in the every bag
	int n, a[100], sought_number_of_ways=1, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `sought_number_of_ways`

	// output
	printf("%d", sought_number_of_ways);
	return 0;
}




// Name : Boy and Boxes
#include <stdio.h>
int main() {
	// input:
	// n :  the number of boxes
	// x : number of the
	// a :  number of balls in each box
	int n, x, a[10000], result[10000]={3,2,5,4}, index;
	scanf("%d %d", &n, &x);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `result`

	// output
	for(index = 0; index< n; index++) {
		printf("%d ",result[index]);
	}
	return 0;
}




// Name : Broogman
#include <stdio.h>
int main() {
	// input:
	// inp : method of saving
	char inp[105];
	int result=52;
	scanf("%s", &inp);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Buttons
#include <stdio.h>
int main() {
	// input:
	// n :  the number of buttons the lock has
	int n, result=3;
	scanf("%d", &n);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Calendar
#include <stdio.h>
int main() {
	// input:
	// start_date : 
	// end_date : 
	char start_date[105], end_date[105];
	int number_of_days=50768;
	scanf("%s", &start_date);
	scanf("%s", &end_date);


	// write your code here
	// store your results in `number_of_days`

	// output
	printf("%d", number_of_days);
	return 0;
}




// Name : Capitalizer
#include <stdio.h>
int main() {
	// input:
	// str : input string
	char str[105], output_str[105]="Samsung";
	scanf("%s", &str);


	// write your code here
	// store your results in `output_str`

	// output
	printf("%s", output_str);
	return 0;
}




// Name : Cat and Pillows
#include <stdio.h>
int main() {
	// input:
	// n :  the number of pillows
	int n;
	char result[105]="YES";
	scanf("%d", &n);


	// write your code here
	// store your results in `result`

	// output
	printf("%s", result);
	return 0;
}




// Name : Cat Food
#include <stdio.h>
int main() {
	// input:
	// n :  the number of cats sitting in a circle
	// m :  the number
	int n, m, number_of_fish_the_dog_will_get=0;
	scanf("%d %d", &n, &m);


	// write your code here
	// store your results in `number_of_fish_the_dog_will_get`

	// output
	printf("%d", number_of_fish_the_dog_will_get);
	return 0;
}




// Name : Changing Root of tree
#include <stdio.h>
int main() {
	// input:
	// n :  the amount of nodes in the tree
	// r1 : index of the old root
	// r2 : e index of the new one
	// old_tree :  old representation of the tree
	int n, r1, r2, old_tree[104], new_tree[104]={2,3}, index;
	scanf("%d %d %d", &n, &r1, &r2);
	for(index = 0; index< (n-1); index++) {
		scanf("%d", &old_tree[index]);
	}


	// write your code here
	// store your results in `new_tree`

	// output
	for(index = 0; index< (n-1); index++) {
		printf("%d ",new_tree[index]);
	}
	return 0;
}




// Name : Changing Username
#include <stdio.h>
int main() {
	// input:
	// q :  number of username change requests
	// old_and_new : 
	int q, number_of_people_that_changed_usernames=2, idx, jdx;
	char old_and_new[105][1000][2], first_and_current[105][1000][2];
	char old_and_new_tmp[2], first_and_current_tmp[2];
	scanf("%d", &q);
	for(idx = 0; idx< q; idx++) {
		scanf("%s", &old_and_new_tmp[0]);
		for(jdx = 0;jdx<2;jdx++) {
			old_and_new[idx][jdx] = old_and_new_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `number_of_people_that_changed_usernames`,`first_and_current`

	// output
	printf("%d", number_of_people_that_changed_usernames);
	for(idx = 0; idx< number_of_people_that_changed_usernames; idx++) {
		for(jdx = 0;jdx<2;jdx++) {
			printf("%s ",first_and_current[idx][jdx]);
		}
		printf("\n");
	}
	return 0;
}




// Name : Clockwork
#include <stdio.h>
int main() {
	// input:
	// time :  time in the format of hh mm
	// n :  number of minutes to add
	char time[105], moment_in_time[105]="00:09";
	int n;
	scanf("%s", &time);
	scanf("%d", &n);


	// write your code here
	// store your results in `moment_in_time`

	// output
	printf("%s", moment_in_time);
	return 0;
}




// Name : Coders
#include <stdio.h>
int main() {
	// input:
	// n :  number of developers
	// m :  number of lines of
	// b :  maximum possible number of errors
	// mod : the module you need to use to get the
	// a :  the number of errors that each
	int n, m, b, mod, a[500], result=10, index;
	scanf("%d %d %d %d", &n, &m, &b, &mod);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Collection Game Cards
#include <stdio.h>
int main() {
	// input:
	// n : the number of cards on the assembly line
	// a : cards
	int n, a[100], result=1, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Colored Balls
#include <stdio.h>
int main() {
	// input:
	// k :  the number of colors
	// c :  the number of balls of each color 
	int k, c[1000][1], result=3, idx, jdx;
	char c_tmp[1];
	scanf("%d", &k);
	for(idx = 0; idx< k; idx++) {
		scanf("%s", &c_tmp[0]);
		for(jdx = 0;jdx<1;jdx++) {
			c[idx][jdx] = c_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Concealing Handwriting
#include <stdio.h>
int main() {
	// input:
	// s : A string that the spy needs to send in a letter
	// t : A string that is printed in the news article
	char s[105], t[105];
	int right_case=5, wrong_case=1;
	scanf("%s", &s);
	scanf("%s", &t);


	// write your code here
	// store your results in `right_case`,`wrong_case`

	// output
	printf("%d %d", right_case, wrong_case);
	return 0;
}




// Name : Containing Number
#include <stdio.h>
int main() {
	// input:
	// n : count of the following numbers
	// k : k
	// numbers_to_check : 
	int n, k, numbers_to_check[100][1], result=2, idx, jdx;
	char numbers_to_check_tmp[1];
	scanf("%d %d", &n, &k);
	for(idx = 0; idx< n; idx++) {
		scanf("%s", &numbers_to_check_tmp[0]);
		for(jdx = 0;jdx<1;jdx++) {
			numbers_to_check[idx][jdx] = numbers_to_check_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Cotton Sequence
#include <stdio.h>
int main() {
	// input:
	// n : length of cotton sequence
	// m : m
	int n, m;
	long int result="6";
	scanf("%d %d", &n, &m);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Count Of Divisors
#include <stdio.h>
int main() {
	// input:
	// n : integer n
	int n, smallest_integer=6;
	scanf("%d", &n);


	// write your code here
	// store your results in `smallest_integer`

	// output
	printf("%d", smallest_integer);
	return 0;
}




// Name : Dirty Stairs
#include <stdio.h>
int main() {
	// input:
	// n :  number of steps in the staircase
	// m : number of dirty steps
	// d :  numbers of dirty steps 
	int n, m, d[3000], index;
	char result[105]="YES";
	scanf("%d %d", &n, &m);
	for(index = 0; index< m; index++) {
		scanf("%d", &d[index]);
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%s", result);
	return 0;
}




// Name : Do You Even Swap
#include <stdio.h>
int main() {
	// input:
	// a : given integer
	// t : number of swaps
	long int a, t, result=4321;
	scanf("%d %d", &a, &t);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Duff in Love
#include <stdio.h>
int main() {
	// input:
	// n : positive integer
	int n, answer=10;
	scanf("%d", &n);


	// write your code here
	// store your results in `answer`

	// output
	printf("%d", answer);
	return 0;
}




// Name : Elegance of a Sequence
#include <stdio.h>
int main() {
	// input:
	// n : length of sequence of a
	// a : sequence a
	int n, a[105], k=2, b[105]={4,5}, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `k`,`b`

	// output
	printf("%d\n", k);
	for(index = 0; index< k; index++) {
		printf("%d ",b[index]);
	}
	return 0;
}




// Name : Elite Architect
#include <stdio.h>
int main() {
	// input:
	// n : the number of Buildings in the capital of Nippon
	// h :  number of stories in each building
	int n, h[10000], a[10000]={3,2,0,2,0}, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &h[index]);
	}


	// write your code here
	// store your results in `a`

	// output
	for(index = 0; index< n; index++) {
		printf("%d ",a[index]);
	}
	return 0;
}




// Name : Encoding
#include <stdio.h>
int main() {
	// input:
	// n :  length of word
	// q : position
	int n, q, w=8;
	scanf("%d %d", &n, &q);


	// write your code here
	// store your results in `w`

	// output
	printf("%d", w);
	return 0;
}




// Name : Equality
#include <stdio.h>
int main() {
	// input:
	// n :  the amount of array elements
	// m : array elements
	int n, m[10000], result=3, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &m[index]);
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : EShopping
#include <stdio.h>
int main() {
	// input:
	// n :  number of phone models' descriptions in the shop
	// description :  zero stands for an unread description one for a read description
	int n, description[1000], clicks=9, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &description[index]);
	}


	// write your code here
	// store your results in `clicks`

	// output
	printf("%d", clicks);
	return 0;
}




// Name : Fabulous Sum
#include <stdio.h>
int main() {
	// input:
	// t :  the amount of numbers for which you need to calculate the requested sum
	// n : 
	int t, n[100][1], sum[100][1]={{-4},{499999998352516354}}, idx, jdx;
	char n_tmp[1], sum_tmp[1];
	scanf("%d", &t);
	for(idx = 0; idx< t; idx++) {
		scanf("%s", &n_tmp[0]);
		for(jdx = 0;jdx<1;jdx++) {
			n[idx][jdx] = n_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `sum`

	// output
	for(idx = 0; idx< t; idx++) {
		for(jdx = 0;jdx<1;jdx++) {
			printf("%d ",sum[idx][jdx]);
		}
		printf("\n");
	}
	return 0;
}




// Name : Factorial game
#include <stdio.h>
int main() {
	// input:
	// t :  the number of games the soldiers play
	// ab :  each row containing a pair of integers a and b defining the value of n for each game
	int t, ab[1000000][2], max_score_for_soldiers[100000][1]={{2},{5}}, idx, jdx;
	char ab_tmp[2], max_score_for_soldiers_tmp[1];
	scanf("%d", &t);
	for(idx = 0; idx< t; idx++) {
		scanf("%s", &ab_tmp[0]);
		for(jdx = 0;jdx<2;jdx++) {
			ab[idx][jdx] = ab_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `max_score_for_soldiers`

	// output
	for(idx = 0; idx< t; idx++) {
		for(jdx = 0;jdx<1;jdx++) {
			printf("%d ",max_score_for_soldiers[idx][jdx]);
		}
		printf("\n");
	}
	return 0;
}




// Name : Flowers Girls and Grandma
#include <stdio.h>
int main() {
	// input:
	// n :  the number of girls
	// p : Grandmas favourite prime number
	// lr : each row corresponds to the range of flowers that each girl can grow
	int n, p, lr[10000][2], idx, jdx;
	float result=0.0;
	char lr_tmp[2];
	scanf("%d %d", &n, &p);
	for(idx = 0; idx< n; idx++) {
		scanf("%s", &lr_tmp[0]);
		for(jdx = 0;jdx<2;jdx++) {
			lr[idx][jdx] = lr_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%f", result);
	return 0;
}




// Name : Forgotten Password
#include <stdio.h>
int main() {
	// input:
	// n :  the number of digits in the password 
	// m :  the number of
	// sc : each row contains si ci
	int n, m, result=6, idx, jdx;
	char sc[105][10][2];
	char sc_tmp[2];
	scanf("%d %d", &n, &m);
	for(idx = 0; idx< m; idx++) {
		scanf("%s", &sc_tmp[0]);
		for(jdx = 0;jdx<2;jdx++) {
			sc[idx][jdx] = sc_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Forty Seven
#include <stdio.h>
int main() {
	// input:
	// a : string a
	// b : string b
	char a[105], b[105];
	int minimum_number_of_operations=1;
	scanf("%s", &a);
	scanf("%s", &b);


	// write your code here
	// store your results in `minimum_number_of_operations`

	// output
	printf("%d", minimum_number_of_operations);
	return 0;
}




// Name : Going to a Bar
#include <stdio.h>
int main() {
	// input:
	// n :  the number of streets in Berlin
	// m : the number of avenues in Berlin
	// a :  the cost of spending a night in a bar at the intersection of street N and avenue M
	int n, m, a[100][100], cost=2, idx, jdx;
	char a_tmp[100];
	scanf("%d %d", &n, &m);
	for(idx = 0; idx< n; idx++) {
		scanf("%s", &a_tmp[0]);
		for(jdx = 0;jdx<m;jdx++) {
			a[idx][jdx] = a_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `cost`

	// output
	printf("%d", cost);
	return 0;
}




// Name : Grasshopper
#include <stdio.h>
int main() {
	// input:
	// n :  the length of the board
	// m : width of jump of grasshopper
	// s : length of jump of grasshoppe
	int n, m, s, result=6;
	scanf("%d %d %d", &n, &m, &s);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Greedy Man
#include <stdio.h>
int main() {
	// input:
	// n :  the number of devices that will fit into
	// m :  the number of smartphones available for sale
	// a : 
	int n, m, a[1000], result=8, index;
	scanf("%d %d", &n, &m);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Happy Colleagues
#include <stdio.h>
int main() {
	// input:
	// r :  the number of candies of red
	// g :  the number of candies of green
	// b :  the number of candies of blue
	int r, g, b, number_of_colleagues=4;
	scanf("%d %d %d", &r, &g, &b);


	// write your code here
	// store your results in `number_of_colleagues`

	// output
	printf("%d", number_of_colleagues);
	return 0;
}




// Name : Inmates
#include <stdio.h>
int main() {
	// input:
	// n : number of prisoners
	// t : crime threshold
	// c : selected inmates
	// severity :  severity of the crime committed by each inmate
	int n, t, c, severity[10000], result=2, index;
	scanf("%d %d %d", &n, &t, &c);
	for(index = 0; index< n; index++) {
		scanf("%d", &severity[index]);
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Interesting Game
#include <stdio.h>
int main() {
	// input:
	// a : 
	// b : 
	// mod : 
	int a, b, mod;
	char result[105]="2";
	scanf("%d %d %d", &a, &b, &mod);


	// write your code here
	// store your results in `result`

	// output
	printf("%s", result);
	return 0;
}




// Name : Junior Broker
#include <stdio.h>
int main() {
	// input:
	// n :  number of days
	// e :  amount of Euro Finn has on the first day
	// a :  the currency rate of Dollar to Euro on day i
	int n, e, a[2000], result=8, index;
	scanf("%d %d", &n, &e);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Little Bear With Cards
#include <stdio.h>
int main() {
	// input:
	// n :  the number of cards
	// description : 
	int n, description[10000][2], steps=0, idx, jdx;
	char description_tmp[2];
	scanf("%d", &n);
	for(idx = 0; idx< n; idx++) {
		scanf("%s", &description_tmp[0]);
		for(jdx = 0;jdx<2;jdx++) {
			description[idx][jdx] = description_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `steps`

	// output
	printf("%d", steps);
	return 0;
}




// Name : Magic Pool
#include <stdio.h>
int main() {
	// input:
	// n : number of tourists
	// a : sizes of the pool
	// b : sizes of the pool
	int n, a, b, s=18, a1=3, b1=6;
	scanf("%d %d %d", &n, &a, &b);


	// write your code here
	// store your results in `s`,`a1`,`b1`

	// output
	printf("%d\n", s);
	printf("%d %d", a1, b1);
	return 0;
}




// Name : Magic Square
#include <stdio.h>
int main() {
	// input:
	// original_magic_square : original magic square
	int original_magic_square[3][3], repaired_magic_square[3][3]={{4,4,4},{4,4,4},{4,4,4}}, idx, jdx;
	char original_magic_square_tmp[3], repaired_magic_square_tmp[3];
	for(idx = 0; idx< 3; idx++) {
		scanf("%s", &original_magic_square_tmp[0]);
		for(jdx = 0;jdx<3;jdx++) {
			original_magic_square[idx][jdx] = original_magic_square_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `repaired_magic_square`

	// output
	for(idx = 0; idx< 3; idx++) {
		for(jdx = 0;jdx<3;jdx++) {
			printf("%d ",repaired_magic_square[idx][jdx]);
		}
		printf("\n");
	}
	return 0;
}




// Name : Master of Eight
#include <stdio.h>
int main() {
	// input:
	// n : non negative number
	int n, result=344;
	char exist[105]="YES";
	scanf("%d", &n);


	// write your code here
	// store your results in `exist`,`result`

	// output
	printf("%s\n", exist);
	printf("%d", result);
	return 0;
}




// Name : Max Even Sum 
#include <stdio.h>
int main() {
	// input:
	// n : number of integers
	// given_integers : given integers
	int n, given_integers[100000], result=6, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &given_integers[index]);
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Mom Loves Art
#include <stdio.h>
int main() {
	// input:
	// a1 : 
	// b1 : 
	// a2 : 
	// b2 : 
	// a3 : 
	// b3 : 
	int a1, b1, a2, b2, a3, b3;
	char result[105]="YES";
	scanf("%d %d", &a1, &b1);
	scanf("%d %d", &a2, &b2);
	scanf("%d %d", &a3, &b3);


	// write your code here
	// store your results in `result`

	// output
	printf("%s", result);
	return 0;
}




// Name : MSSUM1
#include <stdio.h>
int main() {
	// input:
	// n :  the number of elements in the array
	// q :  the number of queries correspondingly
	// a :  the array elements
	// lr : each row corresponds to l and r
	int n, q, a[100000], lr[100000][2], sum_of_replies=25, index, idx, jdx;
	char lr_tmp[2];
	scanf("%d %d", &n, &q);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}
	for(idx = 0; idx< q; idx++) {
		scanf("%s", &lr_tmp[0]);
		for(jdx = 0;jdx<2;jdx++) {
			lr[idx][jdx] = lr_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `sum_of_replies`

	// output
	printf("%d", sum_of_replies);
	return 0;
}




// Name : Nearly Prime
#include <stdio.h>
int main() {
	// input:
	// n : range from 1 to n
	int n, result=2;
	scanf("%d", &n);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Notebook with Numbers 
#include <stdio.h>
int main() {
	// input:
	// n : number of sheets
	// k : 
	// a : 
	int n, k, a[300], maximum_sum=27, r[300]={3,4,5,8}, index;
	scanf("%d %d", &n, &k);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `maximum_sum`,`r`

	// output
	printf("%d", maximum_sum);
	for(index = 0; index< (k-1); index++) {
		printf("%d ",r[index]);
	}
	return 0;
}




// Name : Palindrome game
#include <stdio.h>
int main() {
	// input:
	// str : input
	char str[105], winner[105]="First";
	scanf("%s", &str);


	// write your code here
	// store your results in `winner`

	// output
	printf("%s", winner);
	return 0;
}




// Name : Palindromization
#include <stdio.h>
int main() {
	// input:
	// n :  string length
	// p :  the current position of the cursor
	// given_string : string of n lowercase Latin letters
	int n, p, result=12;
	char given_string[105];
	scanf("%d %d", &n, &p);
	scanf("%s", &given_string);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Pocket money
#include <stdio.h>
int main() {
	// input:
	// n : the number of exams
	// r :  the maximum score
	// avg : average score required to double his pocket money
	// ab : ab corresponds to ai bi
	int n, r, avg, ab[10000][2], result=4, idx, jdx;
	char ab_tmp[2];
	scanf("%d %d %d", &n, &r, &avg);
	for(idx = 0; idx< n; idx++) {
		scanf("%s", &ab_tmp[0]);
		for(jdx = 0;jdx<2;jdx++) {
			ab[idx][jdx] = ab_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Pony Sequence
#include <stdio.h>
int main() {
	// input:
	// n : number of elements in the sequences in a and b
	// a : sequence a
	int n, a[100], b[100]={1,1,1,1,1}, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `b`

	// output
	for(index = 0; index< n; index++) {
		printf("%d ",b[index]);
	}
	return 0;
}




// Name : Quiz
#include <stdio.h>
int main() {
	// input:
	// n : number of consecutive questions
	// m : number of questions to which right answer was given
	// k : count threshold
	int n, m, k, result=3;
	scanf("%d %d %d", &n, &m, &k);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Robot's Task
#include <stdio.h>
int main() {
	// input:
	// n : number of non negative integers
	// a : integers
	int n, a[1000], changes=1, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `changes`

	// output
	printf("%d", changes);
	return 0;
}




// Name : Ronaldo’s Bricks
#include <stdio.h>
int main() {
	// input:
	// n :  the number of bricks
	int n, pyramid_height=1;
	scanf("%d", &n);


	// write your code here
	// store your results in `pyramid_height`

	// output
	printf("%d", pyramid_height);
	return 0;
}




// Name : Sailor and Beer
#include <stdio.h>
int main() {
	// input:
	// k :  the cost of the first bottle
	// p :  the
	// n :  number of bottles he wants to buy
	int k, p, n, money_to_borrow=13;
	scanf("%d %d %d", &k, &p, &n);


	// write your code here
	// store your results in `money_to_borrow`

	// output
	printf("%d", money_to_borrow);
	return 0;
}




// Name : Skyscraper
#include <stdio.h>
int main() {
	// input:
	// n : number of skyscrapers
	// k : number of stories to move
	// h : each row has height of each skyscraper
	int n, k, h[100], j=3, index;
	scanf("%d %d", &n, &k);
	for(index = 0; index< n; index++) {
		scanf("%d", &h[index]);
	}


	// write your code here
	// store your results in `j`

	// output
	printf("%d", j);
	return 0;
}




// Name : Small Reform
#include <stdio.h>
int main() {
	// input:
	// n :  value of the most expensive coin
	int n;
	char result_set[105]="10 5 1";
	scanf("%d", &n);


	// write your code here
	// store your results in `result_set`

	// output
	printf("%s", result_set);
	return 0;
}




// Name : Snowflakes
#include <stdio.h>
int main() {
	// input:
	// n : length of array
	// k : number of  letters of the English alphabet
	// english_letters :  contains n uppercase English letters
	int n, k, min_number_of_changes=2;
	char english_letters[105], changed_array[105]="ABCACA";
	scanf("%d %d", &n, &k);
	scanf("%s", &english_letters);


	// write your code here
	// store your results in `min_number_of_changes`,`changed_array`

	// output
	printf("%d", min_number_of_changes);
	printf("%s", changed_array);
	return 0;
}




// Name : Sort
#include <stdio.h>
int main() {
	// input:
	// n : number of subjects
	// m : the number of limitations
	// su : pairs si ui which describe the order of subjects
	// sequence : 
	int n, m, su[10000][2], sequence[1000], idx, jdx, index;
	char correct[105]="YES";
	char su_tmp[2];
	scanf("%d %d", &n, &m);
	for(idx = 0; idx< m; idx++) {
		scanf("%s", &su_tmp[0]);
		for(jdx = 0;jdx<2;jdx++) {
			su[idx][jdx] = su_tmp[jdx];
		}
	}
	for(index = 0; index< n; index++) {
		scanf("%d", &sequence[index]);
	}


	// write your code here
	// store your results in `correct`

	// output
	printf("%s", correct);
	return 0;
}




// Name : Splitty Palindromes
#include <stdio.h>
int main() {
	// input:
	// word : given word
	char word[105], splitty_palindrome[105]="te a m m a te";
	scanf("%s", &word);


	// write your code here
	// store your results in `splitty_palindrome`

	// output
	printf("%s", splitty_palindrome);
	return 0;
}




// Name : Square
#include <stdio.h>
int main() {
	// input:
	// k :  count of cases
	// an : integers a and n in every row
	int k, an[1000][2], idx, jdx;
	char roots[105]="No root";
	char an_tmp[2];
	scanf("%d", &k);
	for(idx = 0; idx< k; idx++) {
		scanf("%s", &an_tmp[0]);
		for(jdx = 0;jdx<2;jdx++) {
			an[idx][jdx] = an_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `roots`

	// output
	printf("%s", roots);
	return 0;
}




// Name : Squirrel and Nuts
#include <stdio.h>
int main() {
	// input:
	// n :  the initial amount of nuts
	int n, result=16;
	scanf("%d", &n);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Strings Problemo
#include <stdio.h>
int main() {
	// input:
	// s : latin characters
	// t : latin characters
	// n : the number of possible replacements
	// abw : each row corresponds to a b w for each possible replacement
	char s[105], t[105], resulting_string[105]="uxyd";
	int n, answer=21, idx, jdx;
	char abw[500][3], abw_tmp[3];
	scanf("%s", &s);
	scanf("%s", &t);
	scanf("%d", &n);
	for(idx = 0; idx< n; idx++) {
		scanf("%s", &abw_tmp[0]);
		for(jdx = 0;jdx<3;jdx++) {
			abw[idx][jdx] = abw_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `answer`,`resulting_string`

	// output
	printf("%d\n", answer);
	printf("%s", resulting_string);
	return 0;
}




// Name : Supergame
#include <stdio.h>
int main() {
	// input:
	// n : number of boys
	// a :  number of rounds each boy wants to play
	int n, a[10000], result=4, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : The toy shop
#include <stdio.h>
int main() {
	// input:
	// n : number of toys
	int n;
	char color_of_toys[105]="ROYGBIVG";
	scanf("%d", &n);


	// write your code here
	// store your results in `color_of_toys`

	// output
	printf("%s", color_of_toys);
	return 0;
}




// Name : Trains
#include <stdio.h>
int main() {
	// input:
	// n : number of cities
	// m : number of  roads connecting the cities
	// k : number of railways
	// uvx : uvx corresponds to ui vi xi
	// sy : uvx corresponds to si yi
	int n, m, k, uvx[10000][3], sy[10000][2], result=2, idx, jdx;
	char uvx_tmp[3], sy_tmp[2];
	scanf("%d %d %d", &n, &m, &k);
	for(idx = 0; idx< m; idx++) {
		scanf("%s", &uvx_tmp[0]);
		for(jdx = 0;jdx<3;jdx++) {
			uvx[idx][jdx] = uvx_tmp[jdx];
		}
	}
	for(idx = 0; idx< k; idx++) {
		scanf("%s", &sy_tmp[0]);
		for(jdx = 0;jdx<2;jdx++) {
			sy[idx][jdx] = sy_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Treasure Lock
#include <stdio.h>
int main() {
	// input:
	// n : the number of buttons
	int n, result=1;
	scanf("%d", &n);


	// write your code here
	// store your results in `result`

	// output
	printf("%d", result);
	return 0;
}




// Name : Treepath
#include <stdio.h>
int main() {
	// input:
	// n :  the number of vertices
	// m :  edges of the graph
	// uvw : each row has the  numbers of the
	// u :  the number of the starting vertex
	int n, m, uvw[10000][3], u, minimal_total_weight=2, indices_of_edges[10000]={1,2}, idx, jdx, index;
	char uvw_tmp[3];
	scanf("%d %d", &n, &m);
	for(idx = 0; idx< m; idx++) {
		scanf("%s", &uvw_tmp[0]);
		for(jdx = 0;jdx<3;jdx++) {
			uvw[idx][jdx] = uvw_tmp[jdx];
		}
	}
	scanf("%d", &u);


	// write your code here
	// store your results in `minimal_total_weight`,`indices_of_edges`

	// output
	printf("%d", minimal_total_weight);
	for(index = 0; index< n; index++) {
		printf("%d ",indices_of_edges[index]);
	}
	return 0;
}




// Name : Two Circles
#include <stdio.h>
int main() {
	// input:
	// n :  the number of points
	// x1 : coordinates of first circle
	// y1 : coordinates of first circle
	// x2 : coordinates of second circle
	// y2 :  coordinates of second circle
	// xy :  each row contains integers xi and yi
	int n, x1, y1, x2, y2, xy[2000][2], minimum_value=6, idx, jdx;
	char xy_tmp[2];
	scanf("%d %d %d %d %d", &n, &x1, &y1, &x2, &y2);
	for(idx = 0; idx< n; idx++) {
		scanf("%s", &xy_tmp[0]);
		for(jdx = 0;jdx<2;jdx++) {
			xy[idx][jdx] = xy_tmp[jdx];
		}
	}


	// write your code here
	// store your results in `minimum_value`

	// output
	printf("%d", minimum_value);
	return 0;
}




// Name : Two Piles of Balls
#include <stdio.h>
int main() {
	// input:
	// n : number of balls in a pile
	// a : 
	int n, a[100], result=1, b[100]={2,1}, index;
	scanf("%d", &n);
	for(index = 0; index< 2n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `result`,`b`

	// output
	printf("%d", result);
	for(index = 0; index< (2*n); index++) {
		printf("%d ",b[index]);
	}
	return 0;
}




// Name : Vowels and Consonants
#include <stdio.h>
int main() {
	// input:
	// given_string : given string
	char given_string[105], result[105]=".s.d.f.g.h.j.k.l";
	scanf("%s", &given_string);


	// write your code here
	// store your results in `result`

	// output
	printf("%s", result);
	return 0;
}




// Name : Walter Junior
#include <stdio.h>
int main() {
	// input:
	// a :  number of blue substances that Walter has
	// b :  number of purple substances that Walter has
	// c :  number of orange substances that Walter has
	// x :  number of blue substances that Walter needs to get
	// y :  number of purple substances that Walter needs to get
	// z :  number of orange substances that Walter needs to get
	int a, b, c, x, y, z;
	char result[105]="YES";
	scanf("%d %d %d", &a, &b, &c);
	scanf("%d %d %d", &x, &y, &z);


	// write your code here
	// store your results in `result`

	// output
	printf("%s", result);
	return 0;
}




// Name : Weight of Number
#include <stdio.h>
int main() {
	// input:
	// l : boundary start
	// r : boundary end
	int l, r, maximum_weight=20;
	scanf("%d %d", &l, &r);


	// write your code here
	// store your results in `maximum_weight`

	// output
	printf("%d", maximum_weight);
	return 0;
}




// Name : XOR sum
#include <stdio.h>
int main() {
	// input:
	// n :  the number of elements in the array
	// a :  integers from the array
	int n, a[100], xor_sum=3, index;
	scanf("%d", &n);
	for(index = 0; index< n; index++) {
		scanf("%d", &a[index]);
	}


	// write your code here
	// store your results in `xor_sum`

	// output
	printf("%d", xor_sum);
	return 0;
}




